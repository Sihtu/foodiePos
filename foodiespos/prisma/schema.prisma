// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  Company Company[]
  createdAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
  isArchived Boolean @default(false)
}

model Company {
  id      Int    @id @default(autoincrement())
  name    String
  address String
  user    User   @relation(fields: [userId], references: [id])
  userId  Int
  createdAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
  isArchived Boolean @default(false)
}

model Menu {
  id               Int                @id @default(autoincrement())
  name             String             @unique
  price            Int
  MenuCatagoryMenu MenuCatagoryMenu[]
  createdAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
  isArchived Boolean @default(false)
}

model MenuCatagory {
  id               Int                @id @default(autoincrement())
  name             String
  isAvailable      Boolean
  MenuCatagoryMenu MenuCatagoryMenu[]
  createdAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
  isArchived Boolean @default(false)
}

model MenuCatagoryMenu {
  id             Int          @id @default(autoincrement())
  menuId         Int
  menu           Menu         @relation(fields: [menuId], references: [id])
  MenuCatagoryId Int
  menuCatagory   MenuCatagory @relation(fields: [MenuCatagoryId], references: [id])
}
